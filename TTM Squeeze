# Multi-Band TTM Squeeze
# Author: Claude
# Date: 2025-03-08
# Description: An extended version of the TTM Squeeze that displays multiple Bollinger Band settings simultaneously

declare lower;

input price = close;
input length = 20;
input averageType = AverageType.SIMPLE;

# Original TTM Squeeze uses Keltner Channels with an ATR multiplier of 1.5
input KCFactor = 1.5;

# Multiple Bollinger Band settings to display simultaneously
input BBFactor1 = 1.5;
input BBFactor2 = 2.0;
input BBFactor3 = 2.5;

# Calculation for standard deviation
def std = StDev(data = price, length = length);

# Calculate Simple Moving Average
def mov_avg = MovingAverage(averageType, price, length);

# Calculate Average True Range
def atr = MovingAverage(averageType, TrueRange(high, close, low), length);

# Calculate Bollinger Bands for each factor
def upperBB1 = mov_avg + std * BBFactor1;
def lowerBB1 = mov_avg - std * BBFactor1;

def upperBB2 = mov_avg + std * BBFactor2;
def lowerBB2 = mov_avg - std * BBFactor2;

def upperBB3 = mov_avg + std * BBFactor3;
def lowerBB3 = mov_avg - std * BBFactor3;

# Calculate Keltner Channels
def upperKC = mov_avg + atr * KCFactor;
def lowerKC = mov_avg - atr * KCFactor;

# Determine squeeze conditions for each Bollinger Band setting
def squeeze_condition1 = lowerBB1 >= lowerKC and upperBB1 <= upperKC;
def squeeze_condition2 = lowerBB2 >= lowerKC and upperBB2 <= upperKC;
def squeeze_condition3 = lowerBB3 >= lowerKC and upperBB3 <= upperKC;

# Calculate momentum (using proper ThinkScript function)
def highlow_midpoint = (high + low) / 2;
def momentum_val = price - MovingAverage(averageType, highlow_midpoint, length);

# Plot the momentum oscillator
plot ZeroLine = 0;
ZeroLine.SetDefaultColor(Color.GRAY);

plot MomentumOsc = momentum_val;
MomentumOsc.SetPaintingStrategy(PaintingStrategy.HISTOGRAM);
MomentumOsc.AssignValueColor(if momentum_val >= 0 then if momentum_val >= momentum_val[1] then Color.GREEN else Color.DARK_GREEN else if momentum_val < momentum_val[1] then Color.RED else Color.DARK_RED);

# Plot the squeeze dots for each Bollinger Band factor
plot SqueezeDot1 = if squeeze_condition1 then -1 else if squeeze_condition1[1] and !squeeze_condition1 then -1.2 else Double.NaN;
SqueezeDot1.SetPaintingStrategy(PaintingStrategy.POINTS);
SqueezeDot1.SetLineWeight(3);
SqueezeDot1.SetDefaultColor(Color.CYAN);
SqueezeDot1.HideTitle();

plot SqueezeDot2 = if squeeze_condition2 then -1.4 else if squeeze_condition2[1] and !squeeze_condition2 then -1.6 else Double.NaN;
SqueezeDot2.SetPaintingStrategy(PaintingStrategy.POINTS);
SqueezeDot2.SetLineWeight(3);
SqueezeDot2.SetDefaultColor(Color.YELLOW);
SqueezeDot2.HideTitle();

plot SqueezeDot3 = if squeeze_condition3 then -1.8 else if squeeze_condition3[1] and !squeeze_condition3 then -2.0 else Double.NaN;
SqueezeDot3.SetPaintingStrategy(PaintingStrategy.POINTS);
SqueezeDot3.SetLineWeight(3);
SqueezeDot3.SetDefaultColor(Color.MAGENTA);
SqueezeDot3.HideTitle();

# Add labels to identify which color corresponds to which BB factor
AddLabel(yes, "BB " + BBFactor1 + "x: ", Color.CYAN);
AddLabel(yes, "BB " + BBFactor2 + "x: ", Color.YELLOW);
AddLabel(yes, "BB " + BBFactor3 + "x: ", Color.MAGENTA);

# Alert conditions
Alert(squeeze_condition1[1] and !squeeze_condition1, "TTM Squeeze fired - " + BBFactor1 + "x BB", Alert.BAR, Sound.RING);
Alert(squeeze_condition2[1] and !squeeze_condition2, "TTM Squeeze fired - " + BBFactor2 + "x BB", Alert.BAR, Sound.RING);
Alert(squeeze_condition3[1] and !squeeze_condition3, "TTM Squeeze fired - " + BBFactor3 + "x BB", Alert.BAR, Sound.RING);
